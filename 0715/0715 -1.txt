https://hub.docker.com/editions/community/docker-ce-desktop-windows

interpark 하이퍼레저 패브릭으로 배우는 블록체인

이더리움 책

이더리움 베이직 - 이더리움 1호책 내용은 좋은데 버전이 옛날거

이더리움과 솔리디티 입문

이더리움을 활용한 블록체인 프로젝트 구축 - 설명이 이상함

코어 이더리움 프로그래밍

누구나 쉽게 배우는 블록체인 dApp 개발 이더리움으로 풀스택 완성하기 - 그림 많음

솔리디티 프로그래밍 에센셜

블록체인 애플리케이션 개발 실전 입문 - 자체에 대한 개념적인 설명, 약간의 실습

solidity 버전 4번 대.
geth 

파이썬으로 배우는 블록체인 구조와 이론 - 한번쯤 보래, 실제로 블록채인을 코드로 구현
(버전에 관계 없음, 코드로 직접 치기 때문에)

위키북스의 장점 = 책이 안두껍대

하이퍼레저 블록체인 개발 - 보지마세요

chrome extension  어쩌구(api?) 하면 크롬 확장프로그램도 만들수 있고

geth
solidity
node.ja - javascript
python
golang
rust

그래도 국내에선 java를 많이 사용. 정부

오전엔 solidity 변수를 만들었는데
오후에는 만들어진 변수를 가지고 실습을 한대

블록체인 회사에서 제일 많이 만드는게 월릿

지갑 프로그램을 만드는게 아니라

쇼핑몰에 결제 버튼이랑 월릿이랑 연동을 해서 코인으로 결제를 할 수 있는 형태로 만들 것.

1. 쇼핑몰
2. 학교

결제버튼을 누르면 실제로 월릿이 열려서 가진 코인에서 차감이 되도록

사용자A가 월릿 admin 에게 전송이 되도록
로그인이 되어있는 사용자가 월릿 관리자에게 코인을 전달하는 형태로 되고
이게 끝이 아니라 필요한게 무엇이냐면

payment 가 될때 정산페이지에서

1) 결제 내역 (성공인지 실패인지)

관리자 페이지에 정산 페이지 까지 넣어준대
모든 과정이 블록체인 기술이 아니라 일부(월릿결제?) 만 블록체인 기술

그래서 Server랑 client랑 db랑 다 중요하다

블록체인 회사에서 하려는게 이런것들. 블록체인 만들어서 연동해서 코인으로 결제가 되게끔

여기서 가장 중요한건

계정을 관리를 할 때 계정의 권한이다

사용자계정인지, 
쇼핑몰 가맹점 계정인지(쇼핑몰이 하나만들어가면 상관이 없는데, 여러개인 경우)
 - 가맹점 단위로 계정을 만들어 줘야 한다

그 다음 중요한게 transaction 
이더리움 같은경우 최대 10~20초 걸리는데,
10초~20초를 어떻게 사용할 것인지
대기중이라 띄울것인지 뭔지 어떻게 할 것이냐
시스템 같은경우 이 블록체인이 들어갔냐 안들어갔냐 계속 확인

후에 들어갔으면 된거고 안된거면 batch 서버로 보내서 tx를 확인

들어간거면 성공을 띄워주고 안들어갔으면 실패로 띄워주거나(환불) 다시 tx를 돌려서
될때까지 되는지 말든지 기냥 계속 시도 하든가

물류에서 가장 빡치는게 취소. 이미 정산이 됐는데 뭘 취소하고 뭐 어쩌구 하면
물건이랑 돈이랑 싱크가 안맞는대

취소나 반품이 제일 쨔증남.

학교 학생 평가. 이더리움을 mapping으로 만들고
key - value
학번 - 평가내용

을 다 입력하고 데이터를 b/c에 저장

하이퍼레저는 매핑이란 말을 안쓰고 object라 하고
중요한건 데이터를 여기에 어떻게 저장하냐 가 중요.

1) 저장함수
2) 조회함수 두가지만 잘 만들줄 알면 스마트 컨트랙트는 더 이상 넣을 필요가 없대

스마트 컨트랙트는 재배포(업데이트)가 안되기 때문

1학기 중이냐 2학기 중이냐 등 최소한의 검사만 하고
스마트컨트랙트에선 안하고
App단위로 한다

프로그래밍에서 반복문이랑 조건문이 중요한데
스마트 컨트랙트에선 반복문이랑 조건문을 안쓰는게 좋대. 필요가 없으니까

써도 문제가 생긴대
특히 if와 for문 은 정말 어쩔수 없을 때 말고는 웬만하면 안쓴대

그래서 컨트랙트가 상당히 단순함.
길어야 10줄이래. 검사하는것만 빼면 실제로 작동하는 로직만 쳐도 5줄 이내

데이터의 ID.
어떤것을 키값으로 둘 것이냐.

키값 생성시 1,2,3,4,5,,,,,등 하나씩 숫자를 증가시키거나 (그래야 안겹치고)

timestamp를 id 값으로 쓰는 경우도 있는데,(14자리) 겹칠수 있는 가능성이 있다

저장함수, 조회함수 만 잘 만들면 나머지는ㅡ

ID가 어떤값을 가지고 있는지 조회하는 함수

지갑이 코인 내에서 움직이면 상관이 없다 (트랜잭션x 데이터로만 움직임)

하지만 내외부로 움직이는건 트랜잭션이 일어나기 때문에

내부적으로 움직이는거 내외부로 움직이는거 모두를 잡아줘야 한대.
그것 때문에 기획자와 개발자간의 갭이 일어남

