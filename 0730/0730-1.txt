- 아래 블로그에서 FTP 설정 까지만 진행(EOS 설치는 시간이 너무 오래걸려서 다른 것 이용)
https://m.blog.naver.com/blokorea/221313637939

- FTP까지 설정 다 한 후 ubuntu 실행해서 계정 만들고 아래 두개 명령어 실행
wget https://github.com/eosio/eos/releases/download/v1.8.1/eosio_1.8.1-1-ubuntu-16.04_amd64.deb
sudo apt install ./eosio_1.8.1-1-ubuntu-16.04_amd64.deb

- 아래 명령어로 eosio-cli-helper 깃 설치
git clone https://github.com/Hexlant/eosio-cli-helper.git

- /eosio-cli-helper$ vi configuration_info.sh 에서 아래 데이터변경 후 저장(ESC 후 :wq)
## Host for NODEOS
NODEOS_SCHEMA="https"
NODEOS_HOST="jungle2.cryptolions.io"

## Port for NODEOS
NODEOS_PORT="443"


※ https://jungle2.cryptolions.io:443 이 접속이 안될 경우
https://monitor.jungletestnet.io/#home
접속하여 API endpoints 메뉴에 뜨는 다른 URL을 적용해본다.

- ./cleos.sh get info 로 노드 정보 가져오기
정상 동작하면 정상 설치 완료

- cleos 명령어 자동완성 기능 사용을 위해 설치
cd ~/
git clone https://github.com/hexlant/cleos-auto-completion
cd cleos-auto-completion
echo “source $(pwd)/cleos.bash” >> ~/.bashrc
source $(pwd)/cleos.bash

- 백그라운드에서 키오스드 자동 실행 시키기
nohup keosd &

- 키오스 스타트
./keosd_start.sh


- 지갑 만들기(지갑명 eoswallet)
./cleos.sh wallet create -n "eoswallet" --to-console

=> 위와 같이 실행 시 아래 결과가 나옴(password 정보 노출됨)
Creating wallet: eoswallet
Save password to use in the future to unlock this wallet.
Without password imported keys will not be retrievable.
"PW5Ht2MVnw9CW6j5kZbThedDyi72szUDbqRqM5ruFznoWvsdCtvxj"

- 지갑 계정 리스트 확인(좀전에 생성한 eoswallet 이 뜬다.)
./cleos.sh wallet list

- 지갑을 unlock 상태로 만들어줌(전송 등 할 수 있다.)
./cleos.sh wallet unlock -n eoswallet --password PW5Ht2MVnw9CW6j5kZbThedDyi72szUDbqRqM5ruFznoWvsdCtvxj

eosio

./cleos.sh create key --to-console
=>
Private key: 5JeqGuVt79ZUeQh1rekay7zGoutW7pzoCQR8Awr4fvuQ8oykv3D
Public key: EOS5ZZepQMirgVm94LjSZqFohn8pkXHQaT5aHD8ZZzYfCkc99zJkP

- 키 등록 및 확인
./cleos.sh wallet import -n eoswallet
-> Private key를 저장.
명령어 후 위에서 출력된 Private key 입력하면 위에서 등록된 Public key 키가 나온다.

./cleos.sh wallet keys 하면 방금 등록한 Public key 가 나온다.(같은 지 확인)

- 계정 생성
  계정 생성 시 EOS가 소모되는데 현재 보유중인 EOS가 없으니 jungle 테스트 사이트에 접속하여 계정생성을 한다.
https://monitor.jungletestnet.io/#account
사이트에 접속 후 create account로 account 생성

계정명은 무조건 12글자로 맞춰야함. 특수문자 불가능.
eoseunjutest

- 계정정보 확인
./cleos.sh get account eoseunjutest

- 테스트넷(정글)에서 eos 발행
Faucet에서 아이디 입력하면 100EOS 발행해줌.
- 6시간에 1번씩 요청 가능.

- 아래 명령어 두개를 통해서 현재 보유중인 어카운트 확인 가능.
./cleos.sh get account eoseunjutest
-> 종합적인 계정정보 EOS만 노출됨
./cleos.sh get currency balance eosio.token eoseunjutest
-> 정글 토큰도 같이 발급해줌.

- EOS 전송
./cleos.sh transfer petereostest getredpengio "1.2 EOS"

현재는 트랜젝션 ID로 검사 불가능.. jungle에서 막아논 듯..
7716ce53fa0856c8e82de9326f6701024fe7293d98e33eb17186604d74ad37e9

- stake, Delegate(EOS 구성요소) 현황 확인
./close.sh system listbw petereostest

- 자원 임대 하기 실습
일단 현재 나의 계정 정보에서 정보 확인
./cleos.sh get account petereostest
staking 한 net eos, cpu eos 할당.
./cleos.sh system delegatebw (From) (Receiver) “Staking 할 NET EOS” “Staking 할 CPU EOS”
./cleos.sh system delegatebw petereostest petereostest "2 EOS" "3 EOS"

다시 나의 계정 정보 확인
./cleos.sh get account eoseunjutest
net bandwidth의 staked가 1->3 EOS로 늘었고
cpu bandwidth의 stacked 가 1->4 EOS로 늘었다.
EOS balances에서는 5 EOS가 줄었음.

net bandwidth, cpu bandwidth는 24시간 후 자원이 반환된다.
발송되는 msg가 많으면 net bandwidth 사용량이 많고,
내부적으로 프로세스가 많이 돌면 cpu bandwidth 사용량이 많음.


- ram 사고팔기
살때는 기본적으로 EOS로 구매
./cleos.sh  system buyram eoseunjutest eoseunjutest "1 EOS"
팔때는 Byte로 판매 
./cleos.sh system sellram eoseunjutest 1000

Creating wallet: eoswallet
Save password to use in the future to unlock this wallet.
Without password imported keys will not be retrievable.
"PW5JqnFUFaY5SCURUuDafujPXvJLom8Dn5ENrmUefV8zoCCTegqkB"


class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh create key --to-console
Private key: 5KGJC8zCSzvaw4BUpvmGWZXxepewZhCCanAJ9PSFLEXvcttoE9e
Public key: EOS6fodrCaXCsBXhcqeRaC3PLcWqDTDuvsEz5DZUCXqSK49feYhv2

account test
peter eos test
executed transaction: df212cf6b3dc7bef298792b6c1155434b62d74420541c22b872937a3ab2c8def 336 bytes 1124 us warn 2019-07-30T01:34:15.055 thread-0 main.cpp:482 print_result ] warning: transaction executed locally, but may not be confirmed by the network yet 

# eosio <= eosio::newaccount {"creator":"junglefaucet","name":"petereostest","owner":{"threshold":1,"keys":[{"key":"EOS6fodrCaXCs... # eosio <= eosio::buyrambytes {"payer":"junglefaucet","receiver":"petereostest","bytes":4096} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # eosio.ram <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # eosio.ramfee <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # eosio.token <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio.ramfee <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio.rex <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio <= eosio::delegatebw {"from":"junglefaucet","receiver":"petereostest","stake_net_quantity":"1.0000 EOS","stake_cpu_quanti... # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"} # eosio.stake <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"}

faucet

executed transaction: afc81993cb80591ad2e46ca69426fce7eaca7893e55eef5b0b136febe0accdf3 144 bytes 245 us warn 2019-07-30T01:35:36.889 thread-0 main.cpp:482 print_result ] warning: transaction executed locally, but may not be confirmed by the network yet executed transaction: 07b6dcbade0dd6f65a0b088211acc362d363691dfc5b0135f580ec5bcd94ea33 144 bytes 181 us warn 2019-07-30T01:35:37.052 thread-0 main.cpp:482 print_result ] warning: transaction executed locally, but may not be confirmed by the network yet 

# eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"petereostest","quantity":"100.0000 EOS","memo":"Jungle Faucet"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"petereostest","quantity":"100.0000 EOS","memo":"Jungle Faucet"} # petereostest <= eosio.token::transfer {"from":"junglefaucet","to":"petereostest","quantity":"100.0000 EOS","memo":"Jungle Faucet"} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"petereostest","quantity":"100.0000 JUNGLE","memo":"Jungle Faucet"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"petereostest","quantity":"100.0000 JUNGLE","memo":"Jungle Faucet"} # petereostest <= eosio.token::transfer {"from":"junglefaucet","to":"petereostest","quantity":"100.0000 JUNGLE","memo":"Jungle Faucet"}

petereostes2

executed transaction: dde368418ef0539197ab3970187d1f98b51f3961b6bf971afb1d1558631db8aa 336 bytes 963 us warn 2019-07-30T02:23:49.454 thread-0 main.cpp:482 print_result ] warning: transaction executed locally, but may not be confirmed by the network yet 

# eosio <= eosio::newaccount {"creator":"junglefaucet","name":"petereostes2","owner":{"threshold":1,"keys":[{"key":"EOS6fodrCaXCs... # eosio <= eosio::buyrambytes {"payer":"junglefaucet","receiver":"petereostes2","bytes":4096} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # eosio.ram <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # eosio.ramfee <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # eosio.token <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio.ramfee <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio.rex <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio <= eosio::delegatebw {"from":"junglefaucet","receiver":"petereostes2","stake_net_quantity":"1.0000 EOS","stake_cpu_quanti... # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"} # eosio.stake <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"}

1. 잘붙어 있나 확인.
 ㅇcd eosio-cli-helper
 ㅇ~/eosio-cli-helper$ ./cleos.sh get info
 ㅇ만약 어제 처럼 안나온다면 어제 설정다시 봐야 함. : $/eosio-cli-helper$ vi configuration_info.sh

2. 컨트랙트 개발
 ㅇ컴파일러 필요 : 데비앙 패키지 인스톨.
  -developer eos : https://eosio.github.io/eosio.cdt/1.6.0/modules.html
  -devian package install
   (1) $ wget https://github.com/eosio/eosio.cdt/releases/download/v1.6.0/eosio.cdt_1.6.0-1_amd64.deb
   (2) $ sudo apt install ./eosio.cdt_1.6.0-1_amd64.deb

3. cpp 만들기
 ㅇ1) 새폴더 : mrdir hello
 ㅇ2) 새폴더로이동 : cd hello
 ㅇ3) cpp파일생성 : vi hello.cpp    (나가기 :wq)\

generating second account

petereostest
petereostes2


Creating wallet: eoswallet2
Save password to use in the future to unlock this wallet.
Without password imported keys will not be retrievable.
"PW5JNnJ5yPZAegX3KZhHZ68syeSXpU5pQxEKCo9BC4ybAB93GFLY4"

Private key: 5KCf465Qzgsd5ixNogJQGCbi63R94vnQpW3BUUr3vcHJMu1eAeo
Public key: EOS7T1YeVsLXBL8sYFYE1JEwwe3p3RQTo8QyVqPs5qbGrqN3ayLci


executed transaction: 67c874a07ac5c15bbf9a895d1c95f36f0801d802c85dd5fbe7cc6b3e1ef940fa 336 bytes 971 us warn 2019-07-30T02:38:04.369 thread-0 main.cpp:482 print_result ] warning: transaction executed locally, but may not be confirmed by the network yet 

# eosio <= eosio::newaccount {"creator":"junglefaucet","name":"petereostes3","owner":{"threshold":1,"keys":[{"key":"EOS7T1YeVsLXB... # eosio <= eosio::buyrambytes {"payer":"junglefaucet","receiver":"petereostes3","bytes":4096} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # eosio.ram <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ram","quantity":"0.2672 EOS","memo":"buy ram"} # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # eosio.ramfee <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.ramfee","quantity":"0.0014 EOS","memo":"ram fee"} # eosio.token <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio.ramfee <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio.rex <= eosio.token::transfer {"from":"eosio.ramfee","to":"eosio.rex","quantity":"0.0014 EOS","memo":"transfer from eosio.ramfee t... # eosio <= eosio::delegatebw {"from":"junglefaucet","receiver":"petereostes3","stake_net_quantity":"1.0000 EOS","stake_cpu_quanti... # eosio.token <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"} # junglefaucet <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"} # eosio.stake <= eosio.token::transfer {"from":"junglefaucet","to":"eosio.stake","quantity":"2.0000 EOS","memo":"stake bandwidth"}

petereostes3

./cleos.sh set contract -> 명령어 확인

./cleos.sh set contract petereostes3 ~/hello

설치된 컴파일러 삭제 후 버젼업 (1.6.0-1 삭제)
sudo apt remove eosio.cdt
https://github.com/EOSIO/eosio.cdt/tree/v1.6.1

wget https://github.com/eosio/eosio.cdt/releases/download/v1.6.1/eosio.cdt_1.6.1-1_amd64.deb
sudo apt install ./eosio.cdt_1.6.1-1_amd64.deb

class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh set contract petereostes3 ~/hello
Reading WASM from /home/class3/hello/hello.wasm...
Publishing contract...
Error 3080001: Account using more than allotted RAM usage
Error Details:
account petereostes3 has insufficient ram; needs 12526 bytes has 5494 bytes


class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh set contract petereostest ~/hello
Reading WASM from /home/class3/hello/hello.wasm...
Publishing contract...
executed transaction: cae8970631d196983ec4dbd6220ae711e013567e20b8f257c3c82cccccbe0393  736 bytes  366 us
#         eosio <= eosio::setcode               {"account":"petereostest","vmtype":0,"vmversion":0,"code":"0061736d0100000001370b6000017f60027f7f006...
#         eosio <= eosio::setabi                {"account":"petereostest","abi":"0e656f73696f3a3a6162692f312e3100010268690001026e6d046e616d650100000...
warning: transaction executed locally, but may not be confirmed by the network yet         ]
class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$



~/eosio-cli-helper$ ./cleos.sh set contract petereostest ~/hello


저 명령을 petereostest 계정에 했기때문에, 컨트랙트 호스트를 이걸로 잡음


C:\Users\class3\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\home\class3
경로


./cleos.sh push action "petereostest" hi '["petereostes3"]' -p petereostest@active

class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh push action "petereostest" hi '["petereostest"]' -p petereostes3@active
executed transaction: f8b92d77a7b084d255356f6a04b7445e2a8c568ae841997995691e21e3840168  104 bytes  170 us
#  petereostest <= petereostest::hi             {"nm":"petereostest"}
>> Hello, petereostest
warning: transaction executed locally, but may not be confirmed by the network yet         ]
class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$



annotation? 주석

Fig 1 에서 권한에 대한 확인하는 부분이 없기 때문에,
require_auth 를 이용해 확인할 것.

https://developers.eos.io/eosio-home/docs/sending-an-inline-transaction-to-external-contract

/hello 에서
vi hello.cpp

ctrl + r  을 누르면 reverse-i-search가 뜸

eosio-cpp -abigen hello.cpp -o hello.wasm

hi와 bye 를 정의하고나서

eosio-cli-helper/ 에서
.cleos.sh set contract petereostest ~/hello

-> 새 컨트랙트 생성

./cleos.sh push action petereostest bye '["hello"]' -p petereostes3
-> bye에 대한 걸 생성.

./cleos.sh push action petereostest hi '["hello"]' -p petereostes3
-> 권한이 없다고 나옴.

require_auth(nm) 을 집어 넣어서.
접근권한이 있냐 라고 확인함.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
class [[eosio::contract]] hello : public eosio::contract {
   public:
      using eosio::contract::contract;

      [[eosio::action]]
      void hi(eosio::name nm) {
         require_auth(nm);
         eosio::print_f("Hello, %\n", nm);
      }

      [[eosio::action]]
      void bye(eosio::name nm) {
         eosio::print_f("Hello, %\n", nm);
      }


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

권한체크

Fig 2 로 from에 대한 권한체크도 가능

불러오기 할 때 특정 name에 대한 권한부여를 통해 불러오기를 해보라는데..
전 포기욧



hello.cpp 수정

및 새로 작성

class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh set contract petereostest ~/hello
Reading WASM from /home/class3/hello/hello.wasm...
Publishing contract...
executed transaction: 094bd0f07c9623007ef84a1b8a80714e46e472e3d1aa257f358a4065f9bb9f18  800 bytes  386 us
#         eosio <= eosio::setcode               {"account":"petereostest","vmtype":0,"vmversion":0,"code":"0061736d0100000001370b6000017f60027f7f006...
#         eosio <= eosio::setabi                {"account":"petereostest","abi":"0e656f73696f3a3a6162692f312e310002036279650001026e6d046e616d6502686...
warning: transaction executed locally, but may not be confirmed by the network yet         ]

+배포 가동

class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh push action petereostest bye '["hello"]' -p petereostes3
executed transaction: 63e16b4e5e570bbe1841678d319c5ef90ebabbe77e011e5f8b858b79d399fa73  104 bytes  149 us
#  petereostest <= petereostest::bye            {"nm":"hello"}
>> Bye, hello

Bye 가동 확인

hi ㄱㄱ
class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$ ./cleos.sh push action petereostest hi '["hello"]' -p petereostes3
Error 3090004: Missing required authority
Ensure that you have the related authority inside your transaction!;
If you are currently using 'cleos push action' command, try to add the relevant authority using -p option.
Error Details:
missing authority of hello
pending console output:

오류 ㅇㅋ

 ./cleos.sh push action petereostest hi '["petereostest"]' -p petereostes3

ㄱㄱ -> 에러

 ./cleos.sh push action petereostest hi '["petereostes3"]' -p petereostes3

ㄱㄱ -> 성공

class3@DESKTOP-F5Q6G0E:~/eosio-cli-helper$  ./cleos.sh push action petereostest hi '["petereostes3"]' -p petereostes3
executed transaction: ec01609e9bbbbee374ae7bdea51cb62f825ceeb1bc69a0e51b09dce2721bd926  104 bytes  148 us
#  petereostest <= petereostest::hi             {"nm":"petereostes3"}
>> Hello, petereostes3
warning: transaction executed locally, but may not be confirmed by the network yet         ]

