메인넷, 
private 구축하기 (!= 하드포크)

geth  마이닝 ㅇ->학습용 , parity 접속용/ 무겁(불안정)->튕김
parity 마이닝 x -> 프로덕션 안정적

노드운영 -> 서버운영

cf) libra (stable coin) 
코인의 가격을 고정 -> 어디서든 사용
금.. 화폐


cls 화면지우기
dir 디렉터리, 파일리스트 조회
cd 이동(unix) cf) unix 기반 =>파일 시스템 기반
mkdir 폴더명->폴더생성
rm 파일명-> 삭제

notepad 메모장/ mspaint 그림판/ calc 계산기

글로벌 환경변수


노드운영 = 서버운영(운용)
IP, PORT
IP: Internet Protocol => 네트워크 상에서 컴퓨터를 식별하기 위해 사용
PORT: 프로그램 식별자


DNS서버-> 주소의 아이피번호를 확인

127.0.0.1 로컬아이피/ 가상아이피 =>내부아이피


 geth는 POW를 parity는 POA를 대표적으로 지원함

이더리움
스마트컨트랙트 지원- 원하는 데이터 폼을 재정의/제공
 비트코인과 가장 큰 차이 -> 어카운트 구조- 내부에서 데이터를 저장하는 방식


docker 프로그램
docker: 데브옵스 - 가상화 엔진 //다른계열의 운영체제를 돌릴 수 있게끔 도와줌
-> 이미 구축이 완료된 프로그램을 쉽게 쓸 수 있음(클라우드처럼 환경을 올리고 받아서 사용가능)

//
geth
블록 500만개 기준 10일

geth -> p2p(server, client) 프로그램
-> port 매칭(binding)

cf. --ipcdisable

노드 = 하나의 프로그램
1PC에서 다수의 노드 실행 가능
->PORT 중요

순서
1. 노드 폴더생성
2. account new 계정 생성  -- private key --> pubilc key --> account
3. genesis block(#0, 0번째 블록) 생성을 위한 json파일 정의
4. init == genesis block 생성
5. geth --datadir $PWD (--networkid 1234) console   실행
		    네트워크를 구분하는 구분자	
중요도!!!
1. 경로 datadir
2. 제네시스 파일 : genesis.json
3. 노드를 연결할떄 genesis.json 파일이 동일해야 함
계정 (keystore)
3e56f8fed6e60a64de26384434bc41a5d4ea380f     /
c1179dc455553bdc88d95cbe8bcdd20a3892fe16   /1

해시 알고리즘 1:1
1:1 매칭 식별자 private key == account (ex 비밀번호 == 계좌)




keystore 저장공간 필요
privatekey 저장공간 불필요

cf)거래소 ->privatekey -> 거래소 서버DB
거래소 보안이 취약한 이유

0x hex, 16진수
0o 8진수
0b 2진수
coinbase 마이닝 보상을 어떤계정에 넣을것인가
alloc 할당

JSON
키 - 값(value) 쌍으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 데이터 포맷 

노드연결
init genesis.json
--networkid 경로가 같아야

터미널 사용시 고려사항
1. CLI,  CUI
2. GUI : 멀티태스킹
 
chaindata 블록의 모든 정보 저장
lightchaindata 블록의 일부(transactions제외) 정보 저장
마이닝 => 블록 검증하는 역할(lightchaindata만 있으면 불가능)
1 * 10^18 = 1ETH

eth.sendTransaction('') -'from 송신자 to 수신자 value 전송량
(에러가발생 invalid 전달한 데이터의 포맷이 잘못됨을 의미)

1. sendTransaction 할때 form에 전달하는 account 의 lock 상태확인
2. personal unlockAccount(address) 하면unlock
트랜잭션(전송) 발생 => 데이터 수정요청
트랙잭션 -> 블록에 포함이 되야 정상적으로 데이터 변경이 이루어짐


address
genesis.json
genesis.block 생성
geth 접속해서 트렉젝션 발생
address lock 해제
마이닝
balance 확인
노드연결- 다수의 노드 운용

rpcaddr "0.0.0.0" 모든 도메인 접속 가능

geth --networkid 1234  //networkid =version 해야 노드끼리 연결가능 
--datadir $PWD 현제 디렉토리에 저장
--rpc --rpcport 8545 //rpc기능실행, 명령어(eth, personal 액션..)와 같은 외부시스템에서의 요청을 허용 
--rpcaddr "0.0.0.0" //rpc특정ip 허용 (0.0.0.0 은 모든 ip) (127.0.0.1 은 PC내 허용)
--rpccorsdomain "*" //다른 네트워크 망에서 접속하는걸 허용
--rpcapi "admin,db,eth,debuig,miner,net,shh,txpool,personal,web3" //요청 허용 범위
 --port 30304 //네트워크 적인 포트 
console 실행 